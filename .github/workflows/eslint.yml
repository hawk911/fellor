# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# ESLint is a tool for identifying and reporting on patterns
# found in ECMAScript/JavaScript code.
# More details at https://github.com/eslint/eslint
# and https://eslint.org

name: ESLint

on:
  push:
    branches: [ "master" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "master" ]
  schedule:
    - cron: '32 18 * * 4'

jobs:
  eslint:
    name: Run eslint scanning
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          npm install eslint@8.10.0
          npm install @microsoft/eslint-formatter-sarif@3.1.0
          # The following packages are required to lint TypeScript files.
          npm install @typescript-eslint/parser@^5.0.0 @typescript-eslint/eslint-plugin@^5.0.0

      - name: Run ESLint
        # Note: 'continue-on-error' has been removed. 
        # This will make the workflow fail on this step if ESLint has a configuration problem,
        # making it much easier to see the root cause.
        # Once configuration issues are resolved, you can add 'continue-on-error: true' back
        # if you want the workflow to proceed even with linting errors (exit code 1).
        run: |
          npx eslint . \
            --config .eslintrc.js \
            --ext .js,.jsx,.ts,.tsx \
            --format @microsoft/eslint-formatter-sarif \
            --output-file eslint-results.sarif

      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          # The path to the SARIF file which was generated in the previous step.
          sarif_file: eslint-results.sarif
          # This is an optional parameter that will cause the Action to wait for the analysis to complete.
          wait-for-processing: true
